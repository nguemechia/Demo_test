
import {useForm} from "react-hook-form";
import {TextField} from "@material-ui/core";
import Button from '@material-ui/core/Button';
import {Controller} from 'react-hook-form';

import {base64ToFile} from "../../helper/funcHelper";
import CryptoUtils from "../../helper/CryptoUtils";
import {useState} from "react";

const Index = () => {

    const [name, setName] = useState(null)
    const [hashName, setHashName] = useState(null);
    const [decryptHash, setDecryptHash] = useState(null)

    const base64File =
        '';

    const { register, handleSubmit } = useForm();

    const onSubmit = async (data) => {
        setName(data.nom)

        const blobFile = await base64ToFile(base64File);

        const hashName = await CryptoUtils.encrypt(
            blobFile,
            '@pse@20223',
            data.nom,
        );
        setHashName(hashName)

        const decryptHash = await CryptoUtils.decrypt(blobFile, '@pse@20223', hashName)
        setDecryptHash(decryptHash)
    }

    return (
        <div
            className= 'm-auto flex flex-col flex-1 items-center justify-center p-16'
            style={{minWidth: '700px'}}>
            <form onSubmit={handleSubmit(onSubmit)}>
                <label >Nom: </label>
                <input type='text' name='nom' id='nom' {...register("nom")} /><br/><br/>
                <input type="submit" value='send' />
            </form>

            {name && hashName && decryptHash && (
                <div className='mt-16'>
                    <h1>Nom : {name}</h1><br/>
                    <h1>Encryptage du nom : {hashName}</h1><br/>
                    <h1>Decrytage du nom : {decryptHash}</h1><br/>
                </div>
            )}
        </div>
    );
};

export default Index;
